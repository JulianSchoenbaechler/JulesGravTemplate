/*!
 * delaunay.js v1.0.2 | Fast Delaunay Triangulation in JavaScript | CC0
 * https://github.com/ironwallaby/delaunay
 */
var Delaunay;!function(){"use strict";var m=1/1048576;function p(r,n,e,t){var u,i,l,o,a,f,h,s,I,c,N=r[n][0],p=r[n][1],g=r[e][0],v=r[e][1],E=r[t][0],T=r[t][1],b=Math.abs(p-v),k=Math.abs(v-T);if(b<m&&k<m)throw new Error("Eek! Coincident points!");return i=b<m?(o=-(E-g)/(T-v))*((u=(g+N)/2)-(f=(g+E)/2))+(s=(v+T)/2):k<m?(l=-(g-N)/(v-p))*((u=(E+g)/2)-(a=(N+g)/2))+(h=(p+v)/2):(u=((l=-(g-N)/(v-p))*(a=(N+g)/2)-(o=-(E-g)/(T-v))*(f=(g+E)/2)+(s=(v+T)/2)-(h=(p+v)/2))/(l-o),k<b?l*(u-a)+h:o*(u-f)+s),{i:n,j:e,k:t,x:u,y:i,r:(I=g-u)*I+(c=v-i)*c}}function g(r){var n,e,t,u,i,l;for(e=r.length;e;)for(u=r[--e],t=r[--e],n=e;n;)if(l=r[--n],t===(i=r[--n])&&u===l||t===l&&u===i){r.splice(e,2),r.splice(n,2);break}}Delaunay={triangulate:function(t,r){var n,e,u,i,l,o,a,f,h,s,I,c,N=t.length;if(N<3)return[];if(t=t.slice(0),r)for(n=N;n--;)t[n]=t[n][r];for(u=new Array(N),n=N;n--;)u[n]=n;for(u.sort(function(r,n){var e=t[n][0]-t[r][0];return 0!=e?e:r-n}),i=function(r){var n,e,t,u,i,l,o=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,f=Number.NEGATIVE_INFINITY,h=Number.NEGATIVE_INFINITY;for(n=r.length;n--;)r[n][0]<o&&(o=r[n][0]),r[n][0]>f&&(f=r[n][0]),r[n][1]<a&&(a=r[n][1]),r[n][1]>h&&(h=r[n][1]);return t=h-a,[[(i=o+.5*(e=f-o))-20*(u=Math.max(e,t)),(l=a+.5*t)-u],[i,l+20*u],[i+20*u,l-u]]}(t),t.push(i[0],i[1],i[2]),l=[p(t,N+0,N+1,N+2)],o=[],a=[],n=u.length;n--;a.length=0){for(c=u[n],e=l.length;e--;)0<(f=t[c][0]-l[e].x)&&f*f>l[e].r?(o.push(l[e]),l.splice(e,1)):f*f+(h=t[c][1]-l[e].y)*h-l[e].r>m||(a.push(l[e].i,l[e].j,l[e].j,l[e].k,l[e].k,l[e].i),l.splice(e,1));for(g(a),e=a.length;e;)I=a[--e],s=a[--e],l.push(p(t,s,I,c))}for(n=l.length;n--;)o.push(l[n]);for(l.length=0,n=o.length;n--;)o[n].i<N&&o[n].j<N&&o[n].k<N&&l.push(o[n].i,o[n].j,o[n].k);return l},contains:function(r,n){if(n[0]<r[0][0]&&n[0]<r[1][0]&&n[0]<r[2][0]||n[0]>r[0][0]&&n[0]>r[1][0]&&n[0]>r[2][0]||n[1]<r[0][1]&&n[1]<r[1][1]&&n[1]<r[2][1]||n[1]>r[0][1]&&n[1]>r[1][1]&&n[1]>r[2][1])return null;var e=r[1][0]-r[0][0],t=r[2][0]-r[0][0],u=r[1][1]-r[0][1],i=r[2][1]-r[0][1],l=e*i-t*u;if(0==l)return null;var o=(i*(n[0]-r[0][0])-t*(n[1]-r[0][1]))/l,a=(e*(n[1]-r[0][1])-u*(n[0]-r[0][0]))/l;return o<0||a<0||1<o+a?null:[o,a]}},"undefined"!=typeof module&&(module.exports=Delaunay)}();