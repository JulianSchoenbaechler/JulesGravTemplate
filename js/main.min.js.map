{"version":3,"sources":["main.js"],"names":["document","main","headerElement","getElementById","footerElement","initialHeaderHeight","window","getComputedStyle","getPropertyValue","focusTouchedElement","touchedFocus","touchEvent","element","currentTarget","querySelector","classList","remove","add","stopPropagation","preventDefault","toggleTreeElement","event","listItem","parentElement","subList","nextElementSibling","height","concat","state","scrollHeight","navButtonElement","toggle","onresize","closeNavigation","hoverFigures","querySelectorAll","this","i","length","addEventListener","removeEventListener","onFirstTouch"],"mappings":"aASCA,SAASC,iBAAO,mBAAA,WAEb,IAAAC,EAAAF,SAAAG,eAAA,UAGMC,GAFgBJ,SAASG,eAAe,QAC1BH,SAASG,eAAe,UACtBH,SAASG,cAAe,4BAIxCE,EAAsBC,OAAOC,iBAAiBL,GAAeM,iBAAiB,UAEhFC,EAAsB,KAM1B,SAASC,EAAaC,GACpB,IAAMC,EAAUD,EAAWE,cAEvBJ,IAAwBG,EAC1BH,EAAsB,MAElBA,GACFA,EAAoBK,cAAc,UAAUC,UAAUC,OAAO,WAG/DP,EAAsBG,GACFE,cAAc,UAAUC,UAAUE,IAAI,UAC1DN,EAAWO,kBACXP,EAAWQ,kBA2Cfb,OAAOc,kBAnCP,SAA2BC,GAA3B,IAAAC,EAASF,EAAAA,cAAyBG,cAC1BD,EAAWD,EAAMR,mBACjBW,EAAUF,EAASG,UAAAA,OAAAA,UAGrBD,IAAJA,EAAIA,MAASE,OAAb,GAAAC,OAAaC,EAAAJ,EAAAK,aAAA,EAAb,OAIAR,EAAMF,iBAANE,EAAMF,mBA0BRb,OAAOc,iBAlBP,SAA0BC,GACxB,IAAMO,EAAQE,EAAiBf,UAAUgB,OAAO,UAAhD7B,EAAc4B,MAAAA,OAAiBf,EAAAA,GAAAA,OAAUgB,EAA3BF,aAAiBd,MAA/BV,EAIAgB,EAAMF,iBACNE,EAAMH,mBAeRZ,OAAO0B,SATP,WAAAF,EAASG,UAAkBjB,OAAA,UACzBc,EAAAA,MAAiBf,OAAUC,GAY3BV,OAAM4B,iBAAe,aAAcC,SAAAA,IAGjCD,IAHF,IAAMA,EAAeE,KAAKpC,SAASmC,iBAAiB,yCAGlDD,EAAAA,EAAYG,EAAItB,EAAcuB,OAAAD,GAA9B,EACAH,EAAaG,GAAGd,UAAAA,IAAcgB,gBAC/BL,EAAAG,GAAAd,cAAAgB,iBAAA,QAAA7B,GANHJ,OAAAkC,oBAAA,aAAAC","file":"main.min.js","sourcesContent":["/**\n * Basic page interactivity\n * @copyright   2019 by Julian Schoenbaechler. All rights reserved.\n * @version     1.0.1\n * @author      Julian Schoenbaechler\n */\n\n/*! main.js v1.0.1 | MIT License | Page template julian-s.ch */\n\n(function main() {\n  document.addEventListener('DOMContentLoaded', () => {\n    /* eslint-disable no-unused-vars */\n    const headerElement = document.getElementById('header');\n    const mainElement = document.getElementById('main');\n    const footerElement = document.getElementById('footer');\n    const navButtonElement = document.querySelector('header button.hamburger');\n    /* eslint-enable no-unused-vars */\n\n    const initialHeaderHeight = window.getComputedStyle(headerElement).getPropertyValue('height');\n\n    let focusTouchedElement = null;\n\n    /**\n     * Toggles linked gallery figure element active state on touch devices.\n     * @param touchEvent {object} - The event object of the element that was touched.\n     */\n    function touchedFocus(touchEvent) {\n      const element = touchEvent.currentTarget;\n\n      if (focusTouchedElement === element) {\n        focusTouchedElement = null;\n      } else {\n        if (focusTouchedElement) {\n          focusTouchedElement.querySelector('figure').classList.remove('active');\n        }\n\n        focusTouchedElement = element;\n        focusTouchedElement.querySelector('figure').classList.add('active');\n        touchEvent.stopPropagation();\n        touchEvent.preventDefault();\n      }\n    }\n\n    /**\n     * Toggles a blog navigation tree element.\n     * @param event {object} - The event object of the element that is used to toggle.\n     */\n    function toggleTreeElement(event) {\n      const listItem = event.currentTarget.parentElement;\n      const subList = listItem.nextElementSibling;\n      const state = listItem.classList.toggle('active');\n\n      if (subList) {\n        subList.style.height = `${(state ? subList.scrollHeight : 0)}px`;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    /**\n     * Toggles the main navigation of the page on small devices.\n     * @param event {object} - The event object of the element that is used to toggle.\n     */\n    function toggleNavigation(event) {\n      const state = navButtonElement.classList.toggle('active');\n\n      headerElement.style.height = state ? `${headerElement.scrollHeight}px` : initialHeaderHeight;\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    /**\n     * Closes the main navigation of the page on small devices.\n     */\n    function closeNavigation() {\n      navButtonElement.classList.remove('active');\n      headerElement.style.height = initialHeaderHeight;\n    }\n\n    // Assign functions to global space\n    window.toggleTreeElement = toggleTreeElement;\n    window.toggleNavigation = toggleNavigation;\n\n    window.onresize = closeNavigation;\n\n    // Detect if user is using a touch device\n    window.addEventListener('touchstart', function onFirstTouch() {\n      const hoverFigures = this.document.querySelectorAll('div[class*=\"grid-element\"] a > figure');\n\n      for (let i = 0; i < hoverFigures.length; i += 1) {\n        hoverFigures[i].classList.add('touch-device');\n        hoverFigures[i].parentElement.addEventListener('click', touchedFocus);\n      }\n\n      window.removeEventListener('touchstart', onFirstTouch);\n    });\n  });\n}());\n"]}